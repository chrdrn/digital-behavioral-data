min_size = 1,
max_size = 5
max_words = 50,
dfm %>%
textplot_wordcloud(
min_size = 2,
max_size = 6,
max_words = 50,
rotation = 0
)
dfm %>%
textplot_wordcloud(
min_size = 1,
max_size = 5,
max_words = 50,
rotation = 0
)
dfm %>%
dfm_remove(pattern = "statistics") %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50
)
dfm %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50,
rotation = 0
)
dfm %>%
dfm_remove(pattern = "statistics") %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50,
rotation = 0
)
dfm %>%
dfm_remove(pattern = "statistics") %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50,
rotation = 0,
color = "blue"
)
dfm %>%
dfm_remove(pattern = "statistics") %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50,
rotation = 0,
color = "deepskyblue4"
)
dfm %>%
dfm_remove(pattern = "statistics") %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50,
rotation = 0,
color = "dodgerblue"
)
dfm %>%
dfm_remove(pattern = "statistics") %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50,
rotation = 0,
color = "dodgerblue4"
)
dfm %>%
dfm_remove(pattern = "statistics") %>%
textplot_wordcloud(
min_size = 1,
max_size = 8,
max_words = 50,
rotation = 0,
color = "dodgerblue3"
)
install.packages("rvest")
install.packages("rvest", dependencies = T)
scrape_amazon <- function(ASIN, page_num){
url_reviews <- paste0("https://www.amazon.co.uk/product-reviews/",ASIN,"/?pageNumber=",page_num)
doc <- read_html(url_reviews) # Assign results to `doc`
# Review Title
doc %>%
html_nodes("[class='a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold']") %>%
html_text() -> review_title
# Review Text
doc %>%
html_nodes("[class='a-size-base review-text review-text-content']") %>%
html_text() -> review_text
# Number of stars in review
doc %>%
html_nodes("[data-hook='review-star-rating']") %>%
html_text() -> review_star
# Return a tibble
tibble(review_title,
review_text,
review_star,
page = page_num) %>% return()
}
test <- scrape_amazon(ASIN = "B093XNC8QH", page_num = 5)
#| echo: false
options(scipen = 999)
pacman::p_load(
here, fs, # file management
sjmisc, magrittr, lubridate, janitor, # data processing
sjPlot, # analysis
rvest, # scraping
quanteda, quanteda.textplots, # text processing
tidyverse  # last to resolve masking issues
)
test <- scrape_amazon(ASIN = "B093XNC8QH", page_num = 5)
library(pacman)
pacman::p_load(RCurl, XML, dplyr, rvest, purrr)
#### SCRAPE
scrape_amazon <- function(page_num) {
url_reviews <- paste0("https://www.amazon.de/-/en/Vihado-Liquid-chlorophyll-drops-alfalfa/product-reviews/B093XNC8QH/ref=cm_cr_arp_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=", page_num)
doc <- read_html(url_reviews)
map_dfr(doc %>% html_elements("[id^='customer_review']"), ~ data.frame(
review_title = .x %>% html_element(".review-title") %>% html_text2(),
review_text = .x %>% html_element(".review-text-content") %>% html_text2(),
review_star = .x %>% html_element(".review-rating") %>% html_text2(),
date = .x %>% html_element(".review-date") %>% html_text2() %>% gsub(".*vom ", "", .),
author = .x %>% html_element(".a-profile-name") %>% html_text2(),
page = page_num
)) %>%
as_tibble %>%
return()
}
# extract testing
df <- scrape_amazon(page_num = 3)
# df <- scrape_amazon(page_num = 2)
pacman::p_load(RCurl, XML, dplyr, rvest, purrr)
#### SCRAPE
scrape_amazon <- function(page_num) {
url_reviews <- paste0("https://www.amazon.de/-/en/Vihado-Liquid-chlorophyll-drops-alfalfa/product-reviews/B093XNC8QH/ref=cm_cr_arp_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=", page_num)
doc <- read_html(url_reviews)
map_dfr(doc %>% html_elements("[id^='customer_review']"), ~ data.frame(
review_title = .x %>% html_element(".review-title") %>% html_text2(),
review_text = .x %>% html_element(".review-text-content") %>% html_text2(),
review_star = .x %>% html_element(".review-rating") %>% html_text2(),
date = .x %>% html_element(".review-date") %>% html_text2() %>% gsub(".*vom ", "", .),
author = .x %>% html_element(".a-profile-name") %>% html_text2(),
page = page_num
)) %>%
as_tibble %>%
return()
}
# extract testing
df <- scrape_amazon(page_num = 3)
df
# extract testing
for (i in 1:10) {
df[[i]] <- scrape_amazon(page_num = i)
}
df$...7
df %>% glimpse
# extract testing
df_1 <- scrape_amazon(page_num = 1)
df_2 <- scrape_amazon(page_num = 2)
# extract testing
df <- list(
raw = list(
page_1 = scrape_amazon(page_num = 1),
page_2 = scrape_amazon(page_num = 2),
page_3 = scrape_amazon(page_num = 3),
page_4 = scrape_amazon(page_num = 4),
page_5 = scrape_amazon(page_num = 5),
page_6 = scrape_amazon(page_num = 6),
page_7 = scrape_amazon(page_num = 7)
)
)
df$raw
# extract testing
df <- list(
raw = list(
page_01 = scrape_amazon(page_num = 1),
page_02 = scrape_amazon(page_num = 2),
page_03 = scrape_amazon(page_num = 3),
page_04 = scrape_amazon(page_num = 4),
page_05 = scrape_amazon(page_num = 5),
page_06 = scrape_amazon(page_num = 6),
page_07 = scrape_amazon(page_num = 7),
page_08 = scrape_amazon(page_num = 8),
page_09 = scrape_amazon(page_num = 9),
page_10 = scrape_amazon(page_num = 10),
)
)
rm(df, df_1, df_2)
# extract testing
df <- list(
raw = list(
page_01 = scrape_amazon(page_num = 1),
page_02 = scrape_amazon(page_num = 2),
page_03 = scrape_amazon(page_num = 3),
page_04 = scrape_amazon(page_num = 4),
page_05 = scrape_amazon(page_num = 5),
page_06 = scrape_amazon(page_num = 6),
page_07 = scrape_amazon(page_num = 7),
page_08 = scrape_amazon(page_num = 8),
page_09 = scrape_amazon(page_num = 9),
page_10 = scrape_amazon(page_num = 10),
)
)
# extract testing
df <- list(
raw = list(
page_01 = scrape_amazon(page_num = 1),
page_02 = scrape_amazon(page_num = 2),
page_03 = scrape_amazon(page_num = 3),
page_04 = scrape_amazon(page_num = 4),
page_05 = scrape_amazon(page_num = 5),
page_06 = scrape_amazon(page_num = 6),
page_07 = scrape_amazon(page_num = 7),
page_08 = scrape_amazon(page_num = 8),
page_09 = scrape_amazon(page_num = 9)
)
)
df$raw$page_09
# extract testing
df <- list(
raw = list(
page_01 = scrape_amazon(page_num = 1),
page_02 = scrape_amazon(page_num = 2),
page_03 = scrape_amazon(page_num = 3),
page_04 = scrape_amazon(page_num = 4),
page_05 = scrape_amazon(page_num = 5),
page_06 = scrape_amazon(page_num = 6),
page_07 = scrape_amazon(page_num = 7),
page_08 = scrape_amazon(page_num = 8),
page_09 = scrape_amazon(page_num = 9),
page_10 = scrape_amazon(page_num = 10),
page_11 = scrape_amazon(page_num = 11)
)
)
paste("test", i) <- 0
data <- list()
for (i in 1:10) {
data$raw[i] <- scrape_amazon(page_num = i)
}
for (i in 1:10) {
data$raw[[i]] <- scrape_amazon(page_num = i)
}
for (i in 1:10) {
df <- scrape_amazon(page_num = i)
data$raw[[i]] <- df
}
data$raw
scrape_amazon <- function(page_num) {
url_reviews <- paste0("https://www.amazon.de/-/en/Vihado-Liquid-chlorophyll-drops-alfalfa/product-reviews/B093XNC8QH/ref=cm_cr_arp_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews&pageNumber=", page_num, "&sortBy=recent")
doc <- read_html(url_reviews)
map_dfr(doc %>% html_elements("[id^='customer_review']"), ~ data.frame(
review_title = .x %>% html_element(".review-title") %>% html_text2(),
review_text = .x %>% html_element(".review-text-content") %>% html_text2(),
review_star = .x %>% html_element(".review-rating") %>% html_text2(),
date = .x %>% html_element(".review-date") %>% html_text2() %>% gsub(".*vom ", "", .),
author = .x %>% html_element(".a-profile-name") %>% html_text2(),
page = page_num
)) %>%
as_tibble %>%
return()
}
amazon <- list()
for (i in 1:40) {
df <- scrape_amazon(page_num = i)
amazon$raw[[i]] <- df
}
amazon$raw
test <- as.data.frame(do.call(cbind, amazon$raw))
test <- as.data.frame(do.call(rbind, amazon$raw))
rm(test, df, channel_list, data)
amazon$data <- as.data.frame(do.call(rbind, amazon$raw))
amazon$data %>% glimpse()
?corpus()
?rownames_to_column
amazon$data <- as.data.frame(do.call(rbind, amazon$raw)) %>%
rownames_to_column("id")
amazon$data %>% glimpse
amazon$data <- as.data.frame(do.call(rbind, amazon$raw)) %>%
as.numeric(rownames_to_column("id"))
amazon$data <- as.data.frame(do.call(rbind, amazon$raw)) %>%
rownames_to_column("id") %>%
mutate(across(id, as.numeric))
amazon$data %>% glimpse
scrape_amazon <- function(page_num, review_url) {
url_reviews <- paste0(review_url, "&pageNumber=", page_num, "&sortBy=recent")
doc <- read_html(url_reviews)
map_dfr(doc %>% html_elements("[id^='customer_review']"), ~ data.frame(
review_title = .x %>% html_element(".review-title") %>% html_text2(),
review_text = .x %>% html_element(".review-text-content") %>% html_text2(),
review_star = .x %>% html_element(".review-rating") %>% html_text2(),
date = .x %>% html_element(".review-date") %>% html_text2() %>% gsub(".*vom ", "", .),
author = .x %>% html_element(".a-profile-name") %>% html_text2(),
page = page_num
)) %>%
as_tibble %>%
return()
}
url <- list(
p01 = "https://www.amazon.de/LINEAVI-Eiwei%C3%9F-Shake-Kombination-Molkeneiwei%C3%9F-laktosefrei/product-reviews/B018IB02AU/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
p02 = "https://www.amazon.de/Detoxkuren%E2%80%A2-Entw%C3%A4sserung-Entschlackung-Stoffwechsel-entschlacken/product-reviews/B072QW5ZN1/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
p03 = "https://www.amazon.de/Saint-Nutrition%C2%AE-KETO-BURN-Appetitz%C3%BCgler/product-reviews/B08B67V8G5/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
p04 = "https://www.amazon.de/Yokebe-vegetarisch-Mahlzeitersatz-Gewichtsabnahme-hochwertigen/product-reviews/B08GYZ8LRB/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&reviewerType=all_reviews",
p05 = "https://www.amazon.de/Vihado-Liquid-chlorophyll-drops-alfalfa/product-reviews/B093XNC8QH/ref=cm_cr_arp_d_paging_btm_next_2?ie=UTF8&reviewerType=all_reviews"
)
scrape_amazon <- function(page_num, review_url) {
url_reviews <- paste0(review_url, "&pageNumber=", page_num, "&sortBy=recent")
doc <- read_html(url_reviews)
map_dfr(doc %>% html_elements("[id^='customer_review']"), ~ data.frame(
review_title = .x %>% html_element(".review-title") %>% html_text2(),
review_text = .x %>% html_element(".review-text-content") %>% html_text2(),
review_star = .x %>% html_element(".review-rating") %>% html_text2(),
date = .x %>% html_element(".review-date") %>% html_text2() %>% gsub(".*vom ", "", .),
author = .x %>% html_element(".a-profile-name") %>% html_text2(),
page = page_num
)) %>%
as_tibble %>%
return()
}
amazon <- list()
# p01
for (i in 1:79) {
df <- scrape_amazon(page_num = i, review_url = url$p01)
amazon$raw$p01[[i]] <- df
}
amazon$raw$p01
# p02
for (i in 1:28) {
df <- scrape_amazon(page_num = i, review_url = url$p02)
amazon$raw$p02[[i]] <- df
}
# p01
for (i in 1:55) {
df <- scrape_amazon(page_num = i, review_url = url$p03)
amazon$raw$p03[[i]] <- df
}
amazon$raw$p03
# p04
for (i in 1:16) {
df <- scrape_amazon(page_num = i, review_url = url$p04)
amazon$raw$p04[[i]] <- df
}
# p05
for (i in 1:40) {
df <- scrape_amazon(page_num = i, review_url = url$p05)
amazon$raw$p05[[i]] <- df
}
amazon$raw
here()
saveRDS(amazon, file = here("content/08-text_as_datat/data/reviews.RDS"))
saveRDS(amazon, file = here("content/08-text_as_data/data/reviews.RDS"))
amazon$data$p01 <- as.data.frame(do.call(rbind, amazon$raw$p01))
amazon$data$p01
amazon$data$p01 %>% glimpse
test <- amazon$raw %>%
map(., as.data.frame(do.call(rbind, .)) )
product <- c("p01", "p02", "p03", "p04", "p05")
for (i in product) {
amazon$data[[i]] <- as.data.frame(do.call(rbind, amazon$raw)) %>%
rownames_to_column("id") %>%
mutate(across(id, as.numeric))
}
amazon$data$p01 %>% glimpse
for (i in product) {
amazon$data[[i]] <- as.data.frame(do.call(rbind, amazon$raw[[i]])) %>%
rownames_to_column("id") %>%
mutate(across(id, as.numeric))
}
amazon$data$p01 %>% glimpse
amazon$data$p02 %>% glimpse
amazon$data$p03 %>% glimpse
amazon$full <- amazon$data %>%
map_df(., .id =  "src")
amazon$full <- amazon$data %>%
bind_rows(.id = "src")
amazon$full %>% glimpse
amazon$full %>% frq(src)
amazon$test[[i]] <- amazon$raw[[i]] %>%
bind_rows()
amazon$test$p05 %>% glimpse()
amazon$test <- NULL
amazon$data <- NULL
amazon$full <- NULL
product <- c("p01", "p02", "p03", "p04", "p05")
# bind rows for each product
for (i in product) {
amazon$data[[i]] <- amazon$raw[[i]] %>%
bind_rows() %>%
rownames_to_column("id") %>%
mutate(across(id, as.numeric))
}
# bind rows of all products
amazon$full <- amazon$data %>%
bind_rows(.id = "src")
saveRDS(amazon, file = here("content/08-text_as_data/data/reviews.RDS"))
amazon$full %>% glimpse()
names(url)
product <- names(url)
amazon$full %>% frq(date)
amazon$full$date
amazon$clean %>% amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\(\\d{1,2}(.*)\\d{1,4})")
amazon$clean %>% amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "(\\d{1,2}(.*)\\d{1,4})")
)
str_extract()
?str_extract()
amazon$clean %>% amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}")
)
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}")
)
amazon$clean$date %>% frq()
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_match(date_raw, "Italien")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_detect(date_raw, "Italien")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_detect(date_raw, "Italien"),
across(lang, recode, FALSE = german, TRUE = italian)
?recode()
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_detect(date_raw, "Italien"),
across(lang, recode, "FALSE" = "german", "TRUE" = "italian")
)
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien"))
)
amazon$clean %>% glimpse()
amazon$clean %>% frq(lang)
amazon$clean %>% frq(review_star)
amazon$clean$review_star
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = str_extract(date_raw, "\\d{1}(?=,)")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = str_extract(date_raw, "\\^d{1}")
)
amazon$clean %>% glimpse()
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = str_extract(review_star, "\\d{1}(?=,)")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = as.numeric(str_extract(review_star, "\\d{1}(?=,)"))
)
amazon$clean %>% glimpse
