amazon$data[[i]] <- amazon$raw[[i]] %>%
bind_rows() %>%
rownames_to_column("id") %>%
mutate(across(id, as.numeric))
}
# bind rows of all products
amazon$full <- amazon$data %>%
bind_rows(.id = "src")
saveRDS(amazon, file = here("content/08-text_as_data/data/reviews.RDS"))
amazon$full %>% glimpse()
names(url)
product <- names(url)
amazon$full %>% frq(date)
amazon$full$date
amazon$clean %>% amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\(\\d{1,2}(.*)\\d{1,4})")
amazon$clean %>% amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "(\\d{1,2}(.*)\\d{1,4})")
)
str_extract()
?str_extract()
amazon$clean %>% amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}")
)
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}")
)
amazon$clean$date %>% frq()
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_match(date_raw, "Italien")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_detect(date_raw, "Italien")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_detect(date_raw, "Italien"),
across(lang, recode, FALSE = german, TRUE = italian)
?recode()
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = str_detect(date_raw, "Italien"),
across(lang, recode, "FALSE" = "german", "TRUE" = "italian")
)
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien"))
)
amazon$clean %>% glimpse()
amazon$clean %>% frq(lang)
amazon$clean %>% frq(review_star)
amazon$clean$review_star
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = str_extract(date_raw, "\\d{1}(?=,)")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = str_extract(date_raw, "\\^d{1}")
)
amazon$clean %>% glimpse()
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = str_extract(review_star, "\\d{1}(?=,)")
)
amazon$clean %>% glimpse
amazon$clean <- amazon$full %>%
mutate(
across(src, as.factor),
date_raw = date,
date = str_extract(date_raw, "\\d{1,2}(.*)\\d{1,4}"),
lang = as.numeric(str_detect(date_raw, "Italien")),
rating  = as.numeric(str_extract(review_star, "\\d{1}(?=,)"))
)
amazon$clean %>% glimpse
install.packages("quanteda.sentiment")
remotes::install_github("quanteda/quanteda.sentiment")
quarto render
fs::dir_tree
fs::dir_tree()
usethis::edit_r_environ()
usethis::edit_r_environ("project")
# Load packages
pacman::p_load(
here, osfr, fs)
here()
# Create osf data directory
fs::dir_create(here("content/04-api_access_twitter/data.local"))
# Create osf data directory
fs::dir_create(here("content/04-api_access-twitter/data.local"))
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
node
# Create list with osf links
osf <- list(
node = node,
node_data = node %>% osf_ls_files(),
data_raw = node %>% osf_ls_files("raw")
)
node %>% osf_ls_files()
node %>% osf_ls_files("63eb64c6cb544b045b9e5ad6")
node %>% osf_ls_files("2022 winter semester")
node %>% osf_ls_files("2022 winter semester")
node %>% osf_ls_nodes("63eb7af2b3fed604dbe33f57 ")
node %>% osf_ls_nodes("63eb7af2b3fed604dbe33f57")
node %>% osf_ls_nodes("2022 winter semester/04-api_access-twitter")
node %>% osf_ls_files("2022 winter semester")
node %>% osf_ls_files("2022 winter semester/04-api_access-twitter")
node %>% osf_ls_files("2022_ws/04-api_access-twitter")
node %>% osf_ls_files(63eb7af2b3fed604dbe33f57)
node %>% osf_ls_files("63eb7af2b3fed604dbe33f57")
node %>% osf_retrieve_node("63eb7af2b3fed604dbe33f57")
node %>% osf_retrieve_file("63eb7af2b3fed604dbe33f57")
node %>% osf_ls_nodes("63eb7af2b3fed604dbe33f57")
node %>% osf_ls_files("2022_ws/04-api_access-twitter")
# Create list with osf links
osf <- list(
node = node,
node_session_data = node %>% osf_ls_files("2022_ws/04-api_access-twitter")
)
rm(node)
osf$node_session_data
# Create osf data directory
fs::dir_create(here(paste0(
"content/",
"04-api_access-twitter", # edit session name
"/data.local")))
# Create osf data directory
fs::dir_create(here(paste0(
"content/",
"04-api_access-twitter", # edit session name
"/data.locals")))
?here()
i_am()
here::i_am()
dir_ls()
# Create list with osf links
osf <- list(
node = node,
node_session_data = node %>% osf_ls_files(
paste0("2022_ws/", # edit semester here
"04-api_access-twitter" # edit session name
)))
#Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
osf <- list(
node = node,
node_session_data = node %>% osf_ls_files(
paste0("2022_ws/", # edit semester here
"04-api_access-twitter" # edit session name
)))
osf$node_session_data
#### OSF Setup
semester <- "2022_ws"
session  <- "04-api_access-twitter"
# Create osf data directory
fs::dir_create(here(paste0("content/", session, "/data.localss")))
#### OSF Setup
semester <- "2022_ws"
session  <- "04-api_access-twitter"
session_data_path <- paste0("content/", session, "/data.local")
session_data_path
# Create osf data directory
fs::dir_create(here(session_data_path))
# Get data
osf_download(
node_session_data,
path = here(session_data_path),
recurse = TRUE,
progress = TRUE
)
# Get data
osf_download(
osf$node_session_data,
path = here(session_data_path),
recurse = TRUE,
progress = TRUE
)
?function
?function()
?function
#### Custum function
osf_setup <- function(semester, session) {
## Local setup
# Construct data directory
session_data_path <- paste0("content/", session, "/data.local")
# Create data directory
fs::dir_create(here(session_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
osf <- list(
node = node,
node_session_data = node %>% osf_ls_files(paste0(semester, "/", session))
)
# Delete osf project information
rm (node)
}
rm(node, osf, semester, session, session_data_path)
osf_setup("2022_ws", "04-api_access-twitter")
osf_setup("2022_ws", "04-api_access-twitter")
#### Custum function
osf_setup <- function(semester, session) {
## Local setup
# Construct data directory
session_data_path <- paste0("content/", session, "/data.local")
# Create data directory
fs::dir_create(here(session_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
osf <- list(
node = node,
node_session_data = node %>% osf_ls_files(paste0(semester, "/", session))
)
retrun(osf)
}
osf_setup("2022_ws", "04-api_access-twitter")
return(osf)
#### Custum function
osf_setup <- function(semester, session) {
## Local setup
# Construct data directory
session_data_path <- paste0("content/", session, "/data.local")
return(session_data_path)
# Create data directory
fs::dir_create(here(session_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
osf <- list(
node = node,
node_session_data = node %>% osf_ls_files(paste0(semester, "/", session))
)
return(osf)
}
osf_setup("2022_ws", "04-api_access-twitter")
test <- osf_setup("2022_ws", "04-api_access-twitter")
#### Custum function
osf_setup <- function(semester, session) {
setup <- list()
## Local setup
# Construct data directory
setup$local_data_path <- paste0("content/", session, "/data.local")
# Create data directory
fs::dir_create(here(local_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
setup$osf_data_path <- node %>% osf_ls_files(paste0(semester, "/", session))
}
#### Custum function
osf_setup <- function(semester, session) {
setup <- list()
## Local setup
# Construct data directory
setup$local_data_path <- paste0("content/", session, "/data.local")
# Create data directory
fs::dir_create(here(local_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
setup$osf_data_path <- node %>% osf_ls_files(paste0(semester, "/", session))
# output
return(setup)
}
osf_setup("2022_ws", "04-api_access-twitter")
#### Custum function
osf_setup <- function(semester, session) {
setup <- list()
## Local setup
# Construct data directory
setup$local_data_path <- paste0("content/", session, "/data.local")
# Create data directory
fs::dir_create(here(setup$local_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
setup$osf_data_path <- node %>% osf_ls_files(paste0(semester, "/", session))
# output
return(setup)
}
osf_setup("2022_ws", "04-api_access-twitter")
setup <- osf_setup("2022_ws", "04-api_access-twitter")
setup()
setup()
#### Custum function
osf_setup <- function(semester, session) {
setup <- list()
## Local setup
# Construct data directory
setup$local_data_path <- paste0("content/", session, "/data.local")
# Create data directory
fs::dir_create(here(setup$local_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
setup$osf_data_path <- node %>% osf_ls_files(paste0(semester, "/", session))
}
setup <- osf_setup("2022_ws", "04-api_access-twitter")
paths <- osf_setup("2022_ws", "04-api_access-twitter")
paths$name
paths$meta
#### Custum function
osf_setup <- function(semester, session) {
setup <- list()
## Local setup
# Construct data directory
setup$local_data_path <- paste0("content/", session, "/data.local")
# Create data directory
fs::dir_create(here(setup$local_data_path))
## OSF setup
# Retrieve osf project information
node <- osf_retrieve_node(Sys.getenv("OSF_PATH_DATA"))
# Create list with osf links
setup$osf_data_path <- node %>% osf_ls_files(paste0(semester, "/", session))
return(setup)
}
paths <- osf_setup("2022_ws", "04-api_access-twitter")
paths$local_data_path
usethis::edit_r_environ()
Sys.getlocale()
?Sys.getenv()
?Sys.getenv
?Sys.getenv()
Sys.getenv()
Sys.getenv()
#### Load packages
pacman::p_load(
here, osfr, fs, customfunctions)
#### Get custom paths
setup <- osf_setup_dbd("2022_ws", "04-api_access-twitter")
# Get data
osf_download(
setup$osf_data_path,
path = here(session_data_path),
recurse = TRUE,
progress = TRUE
)
"2022_ws", "04-api_access-twitter")
here(setup$local_data_path)
# Get data
osf_download(
setup$osf_data_path,
path = here(setup$local_data_path),
recurse = TRUE,
progress = TRUE
)
list.files()
list.files(here(setup$local_data_path))
?unzip()
# Unzip files
unzip(list.files(here(setup$local_data_path)))
# Unzip files
zipfiles <- list.files(
here(setup$local_data_path),
pattern = "*.zip"
)
map(zipfiles, unzip)
#### Load packages
pacman::p_load(
here, osfr, fs, customfunctions,
tidyverse)
map(zipfiles, unzip)
# Unzip files
zipfiles <- list.files(
here(setup$local_data_path),
pattern = "*.zip",
full.names = TRUE
)
map(zipfiles, unzip)
map(zipfiles, unzip, exdir = setup$local_data_path)
tweets_karneval <- bind_tweets(
paste(setup$local_data_path, "/raw_karneval")
)
# Chunk 2: group activity setup
#| echo: false
# Load packages
pacman::p_load(
here, osfr, fs,
sjmisc, lubridate,
academictwitteR,
ggthemes, ggplot,
quanteda, quanteda.textstats, quanteda.textplots,
tidyverse
)
#| echo: false
# Load packages
pacman::p_load(
here, osfr, fs,
sjmisc, lubridate,
academictwitteR,
ggthemes, ggpubr,
quanteda, quanteda.textstats, quanteda.textplots,
tidyverse
)
tweets_karneval %>% glimpse()
# Load data
tweets_karneval <- bind_tweets(
paste0(setup$local_data_path, "/raw_karneval")
)
tweets_karneval %>% glimpse()
table(tweets_karneval$lang)
frq(tweets_karneval$lang, sort.frq = "desc")
#| fig-dpi: 600
#| fig-align: center
tweets_karneval %>%
ggplot(aes(hour)) +
geom_bar() +
facet_grid(cols = vars(date)) +
theme_pubr()
tweets_karneval %>%
frq(hm,
sort.frq = "desc",
min.frq = 10)
#| layout-align: center
tweets_karneval$user_username %>%
frq(sort.frq = "desc",
min.frq = 10)
# Load packages
library(academictwitteR) # Collecting the data
library(tidyverse) # Preparation of the data
library(quanteda) # Text mining
library(quanteda.textstats) # Text statistics
library(quanteda.textplots) # Visualisation of text data
library(here)
library(sjmisc)
library(lubridate)
library(ggthemes)
library(ggpubr)
# Load data
tweets_karneval <- bind_tweets(
data_path = here("content/04-api_access-twitter/data.local/raw_karneval"),
# data_path = "data/raw_karneval",
output_format = "tidy") %>%
mutate(
datetime = ymd_hms(created_at),
date = date(datetime),
hour = hour(datetime),
min  = minute(datetime),
hms  = hms::as_hms(datetime),
hm   = hms::parse_hm(hms)
)
tweets_karneval %>% glimpse()
test <- read_csv("https://osf.io/download/q6g4c/")
test$`<!DOCTYPE html><html lang="en-us">`
node %>% osf_ls_nodes()
customfunctions::osf_setup_dbd()
customfunctions::osf_setup_dbd
node <- osf_retrieve_node(Sys.getenv("OSF_PATH"))
node %>% osf_ls_files()
node %>% osf_ls_files("2022_ws")
node %>% osf_ls_files("2022_ws/04-twitter")
node %>% osf_ls_files("2022_ws/05-youtube")
osf_download("63ebabd7b3fed60501e3447d")
osf_download(node %>% osf_ls_files("2022_ws/05-youtube"))
test <- osf_download(node %>% osf_ls_files("2022_ws/05-youtube"))
usethis::git_credentials()
Sys.getenv()
Sys.getenv("OSF_PAT")
usethis::edit_r_environ()
