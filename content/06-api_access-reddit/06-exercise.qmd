---
title: "Showcase"
subtitle: "Focus on 4CAT"
format: 
  html:
    toc: true
    toc-depth: 4
callout-appearance: simple
execute: 
  cache: true
  eval: true
  echo: true
  message: false
  warning: false
highlight-style: atom-one
editor_options: 
  chunk_output_type: console
---

```{r}
#| echo: false
install.packages("RedditExtractoR")

library(here)
library(tidyverse)
library(RedditExtractoR)
library(easystats)
library(sjmisc)
```

## Background

Grundsätzlich hat dieses Showcase zwei verschiedene Ziele:

1.  Beispielhafte Vorstellung der Erhebung von {{< fa brands reddit >}} Reddit-Daten mit Hilfe verschiedener R-Pakete
2.  Import und Auswertung der mit dem 4CAT Tool erhobenen Daten.

YouTube Data Tool (YTDT) using the example of Mai Thi Nguyen-Kim ( [{{< fa brands twitter >}}](https://twitter.com/maithi_nk) \| [{{< fa brands instagram >}}](https://www.instagram.com/maithink/) ) and her [{{< fa brands youtube >}}](https://www.youtube.com/c/maiLab)-Channel [maiLab](https://www.youtube.com/c/maiLab).

You can also open this showcase in other interactive and executable environments: [![Binder](https://mybinder.org/badge_logo.svg){alt="Binder"}](https://mybinder.org/v2/gh/chrdrn/dbd_binder/HEAD) [![Google Colab](https://colab.research.google.com/assets/colab-badge.svg){alt="Google Colab"}](https://colab.research.google.com/github/chrdrn/dbd_binder/blob/main/session_05-showcase_youtube.ipynb)

## Datenerhebung mit `RedditExtractoR`

Reddit Extractor is an R package for extracting data out of Reddit. It allows you to:

1.  find subreddits based on a search query

2.  find a user and their Reddit history

3.  find URLs to threads of interest and retrieve comments out of these threads

### Example: Find subreddits

Analog zu dem Beispiel aus dem Seminar, werden mit HIlfe der Funktion `find_subreddits` alle subreddits identifiziert, die entweder in Ihrem Namen oder Ihren Attributen das Keyword `news` enthalten

```{r}
library(tidyverse)
library(RedditExtractoR)

# Get list of subreddits
news <- find_subreddits("news")

# Quick preview of the dataset
news %>% glimpse()

# Arrange subreddits by subscribers
news %>% 
  arrange(-subscribers) %>% 
  tibble() %>% head()
```

### Example: Find thread urls

```{r}
# Get list of top thread urls
news_top_urls <- find_thread_urls(
  subreddit = "news", 
  sort_by = "top", 
  period = "month"
)

# Quick preview of dataset
news_top_urls %>% glimpse()
news_top_urls %>% tibble()


crypto_top_urls %>% tibble()
```

## Analyse der 4CAT Daten

### Datenimport

```{r}

```

### Beiträge im Zeitverlauf

### Wordcloud der Top Entities

## 
